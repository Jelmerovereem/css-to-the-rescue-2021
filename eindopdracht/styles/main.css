:root {
	--font: 'poppins','Lemonada';
	--color-red: #ff6868;
	--i: 0;
}

@font-face {
	font-family: ANCHO;
	src: url(../assets/AnchoGX.ttf);
}

body {
	margin: 0;
	padding: 0;
	font-family: var(--font);
	background: var(--color-red);
}

main {
	--auto-grid-min-size: clamp(50%, 700px, 100%);
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(var(--auto-grid-min-size), 1fr));
}

main>section:nth-child(even) {
	background-image: repeating-conic-gradient(from var(--conicHoek) at 70% 50%, var(--color-red), black, lightgreen, var(--color-red));
	animation: rotateGradient 30s infinite alternate;
}

@property --conicHoek {
  syntax: '<angle>';
  inherits: false;
  initial-value: .4turn;
}

@keyframes rotateGradient {
	from {
		--conicHoek: 0turn;		
	}

	to {
		filter: invert(100%);
		--conicHoek: 1turn;
	}
}

main>section:nth-child(odd) {
	background: #fb8888;
}

h1 {
	color: white;
	text-align: center;
	font-size: 4rem;
	transition: letter-spacing .5s;
	animation: fall-down 2s forwards;
	transform: translateY(-300px);
	text-shadow: 5px 5px 0px lightgreen;
}

h1:hover {
	letter-spacing: 14px;
}

@keyframes fall-down {
	to {
		transform: translateY(0);
		text-shadow: 10px 20px 1px lightgreen;
	}
}

input#switch {
	display: none;
}

input#switch:checked ~ h1 {
	animation:fall-down 2s forwards, change-color 2s forwards;
}

input#switch:checked ~ label>.knifeSvg {
	transform: rotate(50deg);
}

input#switch:checked ~ label>.knifeSvg>path:nth-child(5) {
	opacity: 1;
	transition: 1s ease;
}

input#switch:checked ~ label>.knifeSvg>path:nth-child(n+6) {
	opacity: 1;
	transition: 1s ease;
	transition-delay: 1s;
}

@keyframes change-color {
	0% {
		color: white;
	}
	100% {
		color: #831616;
	}
}

body>header {
	display: flex;
	justify-content: center;
	flex-direction: column;
	height: 100vh;
}

label[for="switch"] {
	z-index: 2;
}

.knifeSvg {
	width: 80%;
	position: absolute;
	top: 50%;
	left: -14%;
	transform: rotate(-50deg);
	transition: all 1s;
}

.knifeSvg path:nth-child(5) {
	opacity: 0;	
}

.knifeSvg path:nth-child(n+6) {
	opacity: 0;
}

header p {
    font-family: ANCHO;
    font-variation-settings:"wght" 52;
	font-size: 1.5em;
	color: white;
	text-align: center;
	animation: varFont 1s infinite alternate;
}

@keyframes varFont {
	to {
		font-variation-settings: "wght" 500;
		letter-spacing: 2px;
		text-shadow: -10px -10px 3px #cc4d4d;
	}
}

h2 {
	position: relative;
	font-size: 5em;
	margin-left: 20px;
	margin-top: 0;
	color: white;
	width: fit-content;
}

h2:hover:before {
	animation: trip-inReverse 1s forwards; 
}

h2:hover:after {
	animation: trip-outReverse 1s forwards;
}

@keyframes trip-inReverse {
	0% {
		top: -20px;
	}

	40% {
		top: -30px;
	}

	100% {
		top: 0px;
	}
}

@keyframes trip-outReverse {
	0% {
		top: 20px;
	}

	40% {
		top: 30px;
	}

	100% {
		top: 0px;
	}
}

h2:before {
	content: attr(data-text);
	position: absolute;
	left: 0;
	color: black;
	letter-spacing: -0.03em;
	animation: trip-in 1s forwards;
}

h2:after {
	content: attr(data-text);
	position: absolute;
	left: 0;
	color: lightgreen;
	letter-spacing: -0.06em;
	animation: trip-out 1s forwards;
}

@keyframes dissolve {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

@keyframes trip-in {
	0% {
		top: 0px;
	}

	60% {
		top: -30px;
	}

	100% {
		top: -20px;
	}
}

@keyframes trip-out {
	0% {
		top: 0px;
	}

	60% {
		top: 30px;
	}

	100% {
		top: 20px;
	}
}

blockquote {
	text-align: center;
}

blockquote>p:first-child>span {
	display: inline-block;
	font-weight: 900;
	font-size: 2em;
	background: repeating-conic-gradient(from var(--conicHoek), var(--color-red), black, lightgreen, var(--color-red));
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	animation: rotateGradient 2s infinite alternate ease, rotateText 2s infinite ease;
}

blockquote>p:first-child>span:nth-child(odd) {
	animation-direction: alternate;
}

@keyframes rotateText {
	to {
		transform: rotate(360deg);
	}
}

blockquote>p:nth-child(2) {
	font-style: italic;
}

cite {
	cursor: none;
	transition: opacity .5s;
}

cite:hover {
	opacity: 0;
}

main>section>div>article {
	width: 90%;
	display: grid;
	align-items: center;
	grid-template-columns: 90% 10%;
	grid-template-areas:
	"title title"
	"description price";
	margin-left: 20px;
	transition: 1s;
}

main>section>div>article>h3 {
	margin: 0;
	color: lightgreen;
	font-size: 2em;
	width: fit-content;
	grid-area: title;
	--textshadow-color1: black;
	--textshadow-color2: white;
	text-shadow: 0px 0px 0 var(--textshadow-color1), -2px -2px 0 var(--textshadow-color1), -4px -4px 0 var(--textshadow-color2), -6px -6px 0 var(--textshadow-color1), -8px -8px 0 var(--textshadow-color2),
				0px 0px 0 var(--textshadow-color1), -2px 2px 0 var(--textshadow-color1), -4px 4px 0 var(--textshadow-color2), -6px 6px 0 var(--textshadow-color1), -8px 8px 0 var(--textshadow-color2);
	transition: text-shadow 1s ease;
}

main>section>div>article>h3:hover {
	text-shadow: 0px 0px 0 var(--textshadow-color1), 2px 2px 0 var(--textshadow-color1), 4px 4px 0 var(--textshadow-color2), 6px 6px 0 var(--textshadow-color1), 8px 8px 0 var(--textshadow-color2),
				0px 0px 0 var(--textshadow-color1), 2px -2px 0 var(--textshadow-color1), 4px -4px 0 var(--textshadow-color2), 6px -6px 0 var(--textshadow-color1), 8px -8px 0 var(--textshadow-color2);
}

main>section>div>article p {
	color: white;
	font-weight: bold;
	grid-area: description;
}

main>section>div>article div {
	grid-area: price;
	font-size: 1.2em;
	font-weight: 700;
	-webkit-text-fill-color: transparent;
	-webkit-text-stroke-width: 1px;
	-webkit-text-stroke-color: white;
	text-shadow: 2px 2px #ff1f8f, 5px 5px black;
	transition: text-shadow .6s;
}

main>section>div>article div:hover {
	text-shadow: 0px 0px #ff1f8f, 1px 1px black;
}

main>section>div>article div:before {
	content: "â‚¬";
}

main>p {
	display: none;
}

main>svg {
	display: block;
	margin: auto;
	transform: rotate(0deg) scale(.5);
	transition: opacity 1s, transform 2s;
	transition-delay: 0s, .1s;
}

main>svg:hover {
	transform: rotate(1080deg) scale(3);
	opacity: 1;
}

main>svg:hover>circle {
	fill: url(#paint0_linear);
}

main>svg:hover>path:not(:nth-child(1)) {
	fill: red;
	transition: all 1s;
}

main>svg:hover>path:nth-child(7) {
	d: path("M105.857 103V98.9107L102.051 97.4155C82.6441 89.7912 61.0708 89.7912 41.6635 97.4155L37.8574 98.9107V103C37.8574 121.778 53.0798 137 71.8574 137C90.6351 137 105.857 121.778 105.857 103Z");
}

main>svg:hover>path:nth-child(8) {
	d: path("M191.857 103V99.1078L178.303 97.5212C158.928 88.8713 136.787 88.8713 117.412 97.5212L113.857 99.1078V103C113.857 121.778 129.08 137 147.857 137C166.635 137 181.857 121.778 181.857 103Z");
}


@media (prefers-reduced-motion) {
	h1 {
		transform: translateY(0);
		animation: none;
	}


	h1:hover {
		letter-spacing: initial;
	}

	header p {
		animation: none;
	}

	input#switch:checked ~ h1 {
		animation: change-color 1s forwards;
	}

	h2:before, h2:after {
		display: none;
	}

	main>section:nth-child(even) {
		animation: none;
	}
	
	main>section>div>article {
		transition: none;
	}

	main>section>div>article>h3 {
		text-shadow: none;	
	}

	main>section>div>article>h3:hover {
		text-shadow: none;
	}

	main>section>div>article div {

		text-shadow: none;
	}

	main>section>div>article div:hover {
		text-shadow: none;
	}

	blockquote>p:first-child>span {
		background: none;
		-webkit-text-fill-color: #cc4d4d;
		animation: none;
	}

	main>p {
		display: block;
		font-weight: 700;
		transform: skew(-20deg);
		margin: 0;
		padding: 10px 20px;
		background: yellow;
		position: fixed;
		bottom: 0;
		right: 20px;
	}

	main>p>span {
		display: block;
		transform: skew(20deg); 
	}

	main>svg {
	display: block;
	margin: auto;
	transform: rotate(0deg) scale(.5);
	transition: none;
	}

	main>svg:hover {
		transform: rotate(0deg) scale(.5);
	}

	main>svg:hover>circle {
		fill: initial;
	}

	main>svg:hover>path:not(:nth-child(1)) {
		fill: red;
		transition: all 1s;
	}
	
}